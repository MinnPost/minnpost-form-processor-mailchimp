"use strict";!function(i){function r(e){return gtag("event","conversion",{send_to:params.gtag_sendto,event_callback:function(){void 0!==e&&(window.location=e)}}),!1}function m(e,a,t,s,n){"undefined"!=typeof ga&&(void 0===n?ga("send",e,a,t,s):ga("send",e,a,t,s,n))}jQuery(document).ready(function(e){0<i(".m-form-minnpost-form-processor-mailchimp").length&&i(".m-form-minnpost-form-processor-mailchimp").submit(function(e){e.preventDefault(),e.stopImmediatePropagation();var n=i("button",this),o=n.text(),a=i(this).serialize();n.prop("disabled",!0),n.text("Processing"),a+="&ajaxrequest=true&subscribe",i.ajax({cache:!1,url:params.ajaxurl,type:"post",dataType:"json",data:a}).done(function(e){var a="",t="info";if(!0===e.success){n.text("Thanks");var s="Signup";switch(e.data.user_status){case"existing":s="Update",a="Thanks for updating your email preferences. They will go into effect immediately.";break;case"new":s="Signup",a="We have added you to the MinnPost mailing list.";break;case"pending":s="Signup",a="We have added you to the MinnPost mailing list. You will need to click the confirmation link in the email we sent to begin receiving messages."}""!==e.data.confirm_message&&(a=e.data.confirm_message),m("event","Newsletter",s,location.pathname),r(location.pathname)}else n.prop("disabled",!1),n.text(o),m("event","Newsletter","Fail",location.pathname),""!==e.data.confirm_message&&(a=e.data.confirm_message),t="error";i(".m-form-message-ajax").html(a),i(".m-form-message-ajax").addClass("m-form-message-"+t).removeClass("m-form-message-ajax-placeholder")}).fail(function(e){i(".m-form-message-ajax").html("<p>An error has occured. Please try again.</p>"),i(".m-form-message-ajax").addClass("m-form-message-error").removeClass("m-form-message-ajax-placeholder"),n.prop("disabled",!1),n.text(o),m("event","Newsletter","Fail",location.pathname)})})})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
