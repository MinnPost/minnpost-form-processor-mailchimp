"use strict";!function(i){function r(e,a,s,o,t){"undefined"!=typeof ga&&(void 0===t?ga("send",e,a,s,o):ga("send",e,a,s,o,t))}jQuery(document).ready(function(e){0<i(".m-form-minnpost-form-processor-mailchimp").length&&i(".m-form-minnpost-form-processor-mailchimp").submit(function(e){e.preventDefault(),e.stopImmediatePropagation();var t=i("button",this),m=t.text(),a=i(this).serialize();t.prop("disabled",!0),t.text("Processing"),a+="&ajaxrequest=true&subscribe",i.ajax({cache:!1,url:params.ajaxurl,type:"post",dataType:"json",data:a}).done(function(e){var a="",s="info";if(!0===e.success){t.text("Thanks");var o="Signup";switch(e.data.user_status){case"existing":o="Update",a="Thanks for updating your email preferences. They will go into effect&nbsp;immediately.";break;case"new":o="Signup",a="We have added you to the MinnPost mailing&nbsp;list.";break;case"pending":o="Signup",a="We have added you to the MinnPost mailing list. You will need to click the confirmation link in the email we sent to begin receiving&nbsp;messages."}""!==e.data.confirm_message&&(a=e.data.confirm_message),r("event","Newsletter",o,location.pathname)}else t.prop("disabled",!1),t.text(m),r("event","Newsletter","Fail",location.pathname),""!==e.data.confirm_message&&(a=e.data.confirm_message),s="error";i(".m-form-message-ajax").html(a),i(".m-form-message-ajax").addClass("m-form-message-"+s).removeClass("m-form-message-ajax-placeholder"),i(".m-form-minnpost-form-processor-mailchimp").addClass("m-form-minnpost-form-processor-mailchimp-submitted")}).fail(function(e){i(".m-form-message-ajax").html("<p>An error has occured. Please try again.</p>"),i(".m-form-message-ajax").addClass("m-form-message-error").removeClass("m-form-message-ajax-placeholder"),i(".m-form-minnpost-form-processor-mailchimp").removeClass("m-form-minnpost-form-processor-mailchimp-submitted"),t.prop("disabled",!1),t.text(m),r("event","Newsletter","Fail",location.pathname)})})})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
