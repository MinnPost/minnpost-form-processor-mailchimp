"use strict";!function(i){function a(){0<i(".m-form-minnpost-form-processor-mailchimp").length&&i(".m-form-minnpost-form-processor-mailchimp").submit(function(e){var n=i("button",this),s=n.text(),a=i(this).serialize();n.prop("disabled",!0),n.text("Processing"),e.preventDefault(),a+="&ajaxrequest=true&subscribe",i.ajax({url:params.ajaxurl,type:"post",dataType:"json",data:a}).done(function(e){var a="";if(!0===e.success){n.text("Thanks");var t="Signup";switch(e.data.user_status){case"existing":t="Update",a="Thanks for updating your email preferences. They will go into effect immediately.";break;case"new":t="Signup",a="We have added you to the MinnPost mailing list.";break;case"pending":t="Signup",a="We have added you to the MinnPost mailing list. You will need to click the confirmation link in the email we sent to begin receiving messages."}""!==e.data.confirm_message&&(a=e.data.confirm_message),"function"==typeof wp_analytics_tracking_event&&(wp_analytics_tracking_event("event","Newsletter",t,location.pathname),function(e){gtag("event","conversion",{send_to:params.gtag_sendto,event_callback:function(){void 0!==e&&(window.location=e)}})}(location.pathname))}else n.prop("disabled",!1),n.text(s),"function"==typeof wp_analytics_tracking_event&&wp_analytics_tracking_event("event","Newsletter","Fail",location.pathname);i(".m-form-message-ajax").html(a),i(".m-form-message-ajax").addClass("m-form-message-info").removeClass("m-form-message-ajax-placeholder")}).fail(function(e){i(".m-form-message-ajax").html("<p>An error has occured. Please try again.</p>"),i(".m-form-message-ajax").addClass("m-form-message-error").removeClass("m-form-message-ajax-placeholder"),n.prop("disabled",!1),n.text(s),"function"==typeof wp_analytics_tracking_event&&wp_analytics_tracking_event("event","Newsletter","Fail",location.pathname)}).always(function(){e.target.reset()})})}jQuery(document).ready(function(e){a()})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNob3J0Y29kZS5qcyJdLCJuYW1lcyI6WyIkIiwic2hvcnRjb2RlRm9ybSIsImxlbmd0aCIsInN1Ym1pdCIsImV2ZW50IiwiYnV0dG9uIiwidGhpcyIsInByZXZpb3VzX2J1dHRvbl90ZXh0IiwidGV4dCIsImFqYXhfZm9ybV9kYXRhIiwic2VyaWFsaXplIiwicHJvcCIsInByZXZlbnREZWZhdWx0IiwiYWpheCIsInVybCIsInBhcmFtcyIsImFqYXh1cmwiLCJ0eXBlIiwiZGF0YVR5cGUiLCJkYXRhIiwiZG9uZSIsInJlc3BvbnNlIiwibWVzc2FnZSIsInN1Y2Nlc3MiLCJhbmFseXRpY3NfYWN0aW9uIiwidXNlcl9zdGF0dXMiLCJjb25maXJtX21lc3NhZ2UiLCJ3cF9hbmFseXRpY3NfdHJhY2tpbmdfZXZlbnQiLCJsb2NhdGlvbiIsInBhdGhuYW1lIiwiZ3RhZyIsInNlbmRfdG8iLCJndGFnX3NlbmR0byIsImV2ZW50X2NhbGxiYWNrIiwid2luZG93IiwiZ3RhZ19yZXBvcnRfY29udmVyc2lvbiIsImh0bWwiLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwiZmFpbCIsImFsd2F5cyIsInRhcmdldCIsInJlc2V0IiwialF1ZXJ5IiwiZG9jdW1lbnQiLCJyZWFkeSJdLCJtYXBwaW5ncyI6ImNBQUEsU0FBWUEsR0FlWCxTQUFTQyxJQUN1RCxFQUExREQsRUFBRyw2Q0FBOENFLFFBQ3JERixFQUFHLDZDQUE4Q0csT0FBUSxTQUFVQyxHQUNsRSxJQUNJQyxFQUFTTCxFQUFHLFNBQVVNLE1BQ3RCQyxFQUF1QkYsRUFBT0csT0FDOUJDLEVBQWlCVCxFQUFHTSxNQUFPSSxZQUMvQkwsRUFBT00sS0FBTSxZQUFZLEdBQ3pCTixFQUFPRyxLQUFNLGNBQ2JKLEVBQU1RLGlCQUVOSCxHQUFrQyw4QkFDbENULEVBQUVhLEtBQUssQ0FDTkMsSUFBS0MsT0FBT0MsUUFDWkMsS0FBTSxPQUNOQyxTQUFXLE9BQ1hDLEtBQU1WLElBRU5XLEtBQU0sU0FBVUMsR0FFaEIsSUFBSUMsRUFBVSxHQUNkLElBQUssSUFBU0QsRUFBU0UsUUFBVSxDQUdoQ2xCLEVBQU9HLEtBQU0sVUFDYixJQUFJZ0IsRUFBbUIsU0FDdkIsT0FBU0gsRUFBU0YsS0FBS00sYUFDdEIsSUFBSyxXQUNKRCxFQUFtQixTQUNuQkYsRUFBVSxvRkFDVixNQUNELElBQUssTUFDSkUsRUFBbUIsU0FDbkJGLEVBQVUsa0RBQ1YsTUFDRCxJQUFLLFVBQ0pFLEVBQW1CLFNBQ25CRixFQUFVLGlKQUdQLEtBQU9ELEVBQVNGLEtBQUtPLGtCQUN6QkosRUFBVUQsRUFBU0YsS0FBS08saUJBRXBCLG1CQUFzQkMsOEJBQzFCQSw0QkFBNkIsUUFBUyxhQUFjSCxFQUFrQkksU0FBU0MsVUF6RHJGLFNBQWlDZixHQU1oQ2dCLEtBQU0sUUFBUyxhQUFjLENBQzNCQyxRQUFXaEIsT0FBT2lCLFlBQ2xCQyxlQVBhLGdCQUNSLElBQXdCbkIsSUFDM0JvQixPQUFPTixTQUFXZCxNQXVEakJxQixDQUF3QlAsU0FBU0MsZ0JBR2xDeEIsRUFBT00sS0FBTSxZQUFZLEdBQ3pCTixFQUFPRyxLQUFNRCxHQUNSLG1CQUFzQm9CLDZCQUMxQkEsNEJBQTZCLFFBQVMsYUFBYyxPQUFRQyxTQUFTQyxVQUd2RTdCLEVBQUcsd0JBQXlCb0MsS0FBTWQsR0FDbEN0QixFQUFHLHdCQUF5QnFDLFNBQVUsdUJBQXdCQyxZQUFhLHFDQUUzRUMsS0FBTSxTQUFVbEIsR0FDaEJyQixFQUFHLHdCQUF5Qm9DLEtBQU0sa0RBQ2xDcEMsRUFBRyx3QkFBeUJxQyxTQUFVLHdCQUF5QkMsWUFBYSxtQ0FDNUVqQyxFQUFPTSxLQUFNLFlBQVksR0FDekJOLEVBQU9HLEtBQU1ELEdBQ1IsbUJBQXNCb0IsNkJBQzFCQSw0QkFBNkIsUUFBUyxhQUFjLE9BQVFDLFNBQVNDLFlBR3RFVyxPQUFRLFdBQ1JwQyxFQUFNcUMsT0FBT0MsWUFNakJDLE9BQVFDLFVBQVdDLE1BQU8sU0FBVTdDLEdBQ25DQyxNQXpGRixDQTRGRzBDIiwiZmlsZSI6ImZyb250LWVuZC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIoIGZ1bmN0aW9uKCAkICkge1xuXG5cdGZ1bmN0aW9uIGd0YWdfcmVwb3J0X2NvbnZlcnNpb24oIHVybCApIHtcblx0XHR2YXIgY2FsbGJhY2sgPSBmdW5jdGlvbiAoKSB7XG5cdFx0ICBpZiAoICd1bmRlZmluZWQnICE9PSB0eXBlb2YoIHVybCApICkge1xuXHRcdCAgICB3aW5kb3cubG9jYXRpb24gPSB1cmw7XG5cdFx0ICB9XG5cdFx0fTtcblx0XHRndGFnKCAnZXZlbnQnLCAnY29udmVyc2lvbicsIHtcblx0XHQgICdzZW5kX3RvJzogcGFyYW1zLmd0YWdfc2VuZHRvLFxuXHRcdCAgJ2V2ZW50X2NhbGxiYWNrJzogY2FsbGJhY2tcblx0XHR9ICk7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cblx0ZnVuY3Rpb24gc2hvcnRjb2RlRm9ybSgpIHtcblx0XHRpZiAoICQoICcubS1mb3JtLW1pbm5wb3N0LWZvcm0tcHJvY2Vzc29yLW1haWxjaGltcCcgKS5sZW5ndGggPiAwICkge1xuXHRcdFx0JCggJy5tLWZvcm0tbWlubnBvc3QtZm9ybS1wcm9jZXNzb3ItbWFpbGNoaW1wJyApLnN1Ym1pdCggZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0XHR2YXIgdGhhdCA9IHRoaXM7XG5cdFx0XHRcdHZhciBidXR0b24gPSAkKCAnYnV0dG9uJywgdGhpcyApO1xuXHRcdFx0XHR2YXIgcHJldmlvdXNfYnV0dG9uX3RleHQgPSBidXR0b24udGV4dCgpO1xuXHRcdFx0XHR2YXIgYWpheF9mb3JtX2RhdGEgPSAkKCB0aGlzICkuc2VyaWFsaXplKCk7IC8vIHNlcmlhbGl6ZSB0aGUgZm9ybSBkYXRhXG5cdFx0XHRcdGJ1dHRvbi5wcm9wKCAnZGlzYWJsZWQnLCB0cnVlICk7XG5cdFx0XHRcdGJ1dHRvbi50ZXh0KCAnUHJvY2Vzc2luZycgKTtcblx0XHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTsgLy8gUHJldmVudCB0aGUgZGVmYXVsdCBmb3JtIHN1Ym1pdC5cdFx0XHRcdFxuXHRcdFx0XHQvL2FkZCBvdXIgb3duIGFqYXggY2hlY2sgYXMgWC1SZXF1ZXN0ZWQtV2l0aCBpcyBub3QgYWx3YXlzIHJlbGlhYmxlXG5cdFx0XHRcdGFqYXhfZm9ybV9kYXRhID0gYWpheF9mb3JtX2RhdGEgKyAnJmFqYXhyZXF1ZXN0PXRydWUmc3Vic2NyaWJlJztcblx0XHRcdFx0JC5hamF4KHtcblx0XHRcdFx0XHR1cmw6IHBhcmFtcy5hamF4dXJsLCAvLyBkb21haW4vd3AtYWRtaW4vYWRtaW4tYWpheC5waHBcblx0XHRcdFx0XHR0eXBlOiAncG9zdCcsXG5cdFx0XHRcdFx0ZGF0YVR5cGUgOiAnanNvbicsXG5cdFx0XHRcdFx0ZGF0YTogYWpheF9mb3JtX2RhdGFcblx0XHRcdFx0fSApXG5cdFx0XHRcdC5kb25lKCBmdW5jdGlvbiggcmVzcG9uc2UgKSB7IC8vIHJlc3BvbnNlIGZyb20gdGhlIFBIUCBhY3Rpb25cblxuXHRcdFx0XHRcdHZhciBtZXNzYWdlID0gJyc7XG5cdFx0XHRcdFx0aWYgKCB0cnVlID09PSByZXNwb25zZS5zdWNjZXNzICkge1xuXHRcdFx0XHRcdFx0Ly8kKCAnZmllbGRzZXQnLCB0aGF0ICkuaGlkZSgpOyAvLyB3ZSBkbyBuZWVkIHNvbWUgd2F5IG9mIGRvaW5nIHRoaXM/XG5cblx0XHRcdFx0XHRcdGJ1dHRvbi50ZXh0KCAnVGhhbmtzJyApO1xuXHRcdFx0XHRcdFx0dmFyIGFuYWx5dGljc19hY3Rpb24gPSAnU2lnbnVwJztcblx0XHRcdFx0XHRcdHN3aXRjaCAoIHJlc3BvbnNlLmRhdGEudXNlcl9zdGF0dXMgKSB7XG5cdFx0XHRcdFx0XHRcdGNhc2UgJ2V4aXN0aW5nJzpcblx0XHRcdFx0XHRcdFx0XHRhbmFseXRpY3NfYWN0aW9uID0gJ1VwZGF0ZSc7XG5cdFx0XHRcdFx0XHRcdFx0bWVzc2FnZSA9ICdUaGFua3MgZm9yIHVwZGF0aW5nIHlvdXIgZW1haWwgcHJlZmVyZW5jZXMuIFRoZXkgd2lsbCBnbyBpbnRvIGVmZmVjdCBpbW1lZGlhdGVseS4nO1xuXHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRjYXNlICduZXcnOlxuXHRcdFx0XHRcdFx0XHRcdGFuYWx5dGljc19hY3Rpb24gPSAnU2lnbnVwJztcblx0XHRcdFx0XHRcdFx0XHRtZXNzYWdlID0gJ1dlIGhhdmUgYWRkZWQgeW91IHRvIHRoZSBNaW5uUG9zdCBtYWlsaW5nIGxpc3QuJztcblx0XHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdFx0Y2FzZSAncGVuZGluZyc6XG5cdFx0XHRcdFx0XHRcdFx0YW5hbHl0aWNzX2FjdGlvbiA9ICdTaWdudXAnO1xuXHRcdFx0XHRcdFx0XHRcdG1lc3NhZ2UgPSAnV2UgaGF2ZSBhZGRlZCB5b3UgdG8gdGhlIE1pbm5Qb3N0IG1haWxpbmcgbGlzdC4gWW91IHdpbGwgbmVlZCB0byBjbGljayB0aGUgY29uZmlybWF0aW9uIGxpbmsgaW4gdGhlIGVtYWlsIHdlIHNlbnQgdG8gYmVnaW4gcmVjZWl2aW5nIG1lc3NhZ2VzLic7XG5cdFx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRpZiAoICcnICE9PSByZXNwb25zZS5kYXRhLmNvbmZpcm1fbWVzc2FnZSApIHtcblx0XHRcdFx0XHRcdFx0bWVzc2FnZSA9IHJlc3BvbnNlLmRhdGEuY29uZmlybV9tZXNzYWdlO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0aWYgKCAnZnVuY3Rpb24nID09PSB0eXBlb2Ygd3BfYW5hbHl0aWNzX3RyYWNraW5nX2V2ZW50ICkge1xuXHRcdFx0XHRcdFx0XHR3cF9hbmFseXRpY3NfdHJhY2tpbmdfZXZlbnQoICdldmVudCcsICdOZXdzbGV0dGVyJywgYW5hbHl0aWNzX2FjdGlvbiwgbG9jYXRpb24ucGF0aG5hbWUgKTtcblx0XHRcdFx0XHRcdFx0Z3RhZ19yZXBvcnRfY29udmVyc2lvbiggbG9jYXRpb24ucGF0aG5hbWUgKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0YnV0dG9uLnByb3AoICdkaXNhYmxlZCcsIGZhbHNlICk7XG5cdFx0XHRcdFx0XHRidXR0b24udGV4dCggcHJldmlvdXNfYnV0dG9uX3RleHQgKTtcblx0XHRcdFx0XHRcdGlmICggJ2Z1bmN0aW9uJyA9PT0gdHlwZW9mIHdwX2FuYWx5dGljc190cmFja2luZ19ldmVudCApIHtcblx0XHRcdFx0XHRcdFx0d3BfYW5hbHl0aWNzX3RyYWNraW5nX2V2ZW50KCAnZXZlbnQnLCAnTmV3c2xldHRlcicsICdGYWlsJywgbG9jYXRpb24ucGF0aG5hbWUgKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0JCggJy5tLWZvcm0tbWVzc2FnZS1hamF4JyApLmh0bWwoIG1lc3NhZ2UgKTtcblx0XHRcdFx0XHQkKCAnLm0tZm9ybS1tZXNzYWdlLWFqYXgnICkuYWRkQ2xhc3MoICdtLWZvcm0tbWVzc2FnZS1pbmZvJyApLnJlbW92ZUNsYXNzKCAnbS1mb3JtLW1lc3NhZ2UtYWpheC1wbGFjZWhvbGRlcicgKTtcblx0XHRcdFx0fSApXG5cdFx0XHRcdC5mYWlsKCBmdW5jdGlvbiggcmVzcG9uc2UgKSB7XG5cdFx0XHRcdFx0JCggJy5tLWZvcm0tbWVzc2FnZS1hamF4JyApLmh0bWwoICc8cD5BbiBlcnJvciBoYXMgb2NjdXJlZC4gUGxlYXNlIHRyeSBhZ2Fpbi48L3A+JyApO1xuXHRcdFx0XHRcdCQoICcubS1mb3JtLW1lc3NhZ2UtYWpheCcgKS5hZGRDbGFzcyggJ20tZm9ybS1tZXNzYWdlLWVycm9yJyApLnJlbW92ZUNsYXNzKCAnbS1mb3JtLW1lc3NhZ2UtYWpheC1wbGFjZWhvbGRlcicgKTtcblx0XHRcdFx0XHRidXR0b24ucHJvcCggJ2Rpc2FibGVkJywgZmFsc2UgKTtcblx0XHRcdFx0XHRidXR0b24udGV4dCggcHJldmlvdXNfYnV0dG9uX3RleHQgKTtcblx0XHRcdFx0XHRpZiAoICdmdW5jdGlvbicgPT09IHR5cGVvZiB3cF9hbmFseXRpY3NfdHJhY2tpbmdfZXZlbnQgKSB7XG5cdFx0XHRcdFx0XHR3cF9hbmFseXRpY3NfdHJhY2tpbmdfZXZlbnQoICdldmVudCcsICdOZXdzbGV0dGVyJywgJ0ZhaWwnLCBsb2NhdGlvbi5wYXRobmFtZSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSApXG5cdFx0XHRcdC5hbHdheXMoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGV2ZW50LnRhcmdldC5yZXNldCgpO1xuXHRcdFx0XHR9ICk7XG5cdFx0XHR9KTtcblx0XHR9XG5cdH1cblxuXHRqUXVlcnkoIGRvY3VtZW50ICkucmVhZHkoIGZ1bmN0aW9uKCAkICkge1xuXHRcdHNob3J0Y29kZUZvcm0oKTtcblx0fSk7XG5cbn0pKGpRdWVyeSk7Il19
