"use strict";!function(o){function a(){0<o(".m-form-minnpost-form-processor-mailchimp").length&&o(".m-form-minnpost-form-processor-mailchimp").submit(function(e){var s=o("button",this),i=s.text(),a=o(this).serialize();s.prop("disabled",!0),s.text("Processing"),e.preventDefault(),a+="&ajaxrequest=true&subscribe",o.ajax({url:params.ajaxurl,type:"post",dataType:"json",data:a}).done(function(e){var a="",t="info";if(!0===e.success){s.text("Thanks");var n="Signup";switch(e.data.user_status){case"existing":n="Update",a="Thanks for updating your email preferences. They will go into effect immediately.";break;case"new":n="Signup",a="We have added you to the MinnPost mailing list.";break;case"pending":n="Signup",a="We have added you to the MinnPost mailing list. You will need to click the confirmation link in the email we sent to begin receiving messages."}""!==e.data.confirm_message&&(a=e.data.confirm_message),"function"==typeof wp_analytics_tracking_event&&(wp_analytics_tracking_event("event","Newsletter",n,location.pathname),function(e){gtag("event","conversion",{send_to:params.gtag_sendto,event_callback:function(){void 0!==e&&(window.location=e)}})}(location.pathname))}else s.prop("disabled",!1),s.text(i),"function"==typeof wp_analytics_tracking_event&&wp_analytics_tracking_event("event","Newsletter","Fail",location.pathname),""!==e.data.confirm_message&&(a=e.data.confirm_message),t="error";o(".m-form-message-ajax").html(a),o(".m-form-message-ajax").addClass("m-form-message-"+t).removeClass("m-form-message-ajax-placeholder")}).fail(function(e){o(".m-form-message-ajax").html("<p>An error has occured. Please try again.</p>"),o(".m-form-message-ajax").addClass("m-form-message-error").removeClass("m-form-message-ajax-placeholder"),s.prop("disabled",!1),s.text(i),"function"==typeof wp_analytics_tracking_event&&wp_analytics_tracking_event("event","Newsletter","Fail",location.pathname)})})}jQuery(document).ready(function(e){a()})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNob3J0Y29kZS5qcyJdLCJuYW1lcyI6WyIkIiwic2hvcnRjb2RlRm9ybSIsImxlbmd0aCIsInN1Ym1pdCIsImV2ZW50IiwiYnV0dG9uIiwidGhpcyIsInByZXZpb3VzX2J1dHRvbl90ZXh0IiwidGV4dCIsImFqYXhfZm9ybV9kYXRhIiwic2VyaWFsaXplIiwicHJvcCIsInByZXZlbnREZWZhdWx0IiwiYWpheCIsInVybCIsInBhcmFtcyIsImFqYXh1cmwiLCJ0eXBlIiwiZGF0YVR5cGUiLCJkYXRhIiwiZG9uZSIsInJlc3BvbnNlIiwibWVzc2FnZSIsIm1lc3NhZ2VfY2xhc3MiLCJzdWNjZXNzIiwiYW5hbHl0aWNzX2FjdGlvbiIsInVzZXJfc3RhdHVzIiwiY29uZmlybV9tZXNzYWdlIiwid3BfYW5hbHl0aWNzX3RyYWNraW5nX2V2ZW50IiwibG9jYXRpb24iLCJwYXRobmFtZSIsImd0YWciLCJzZW5kX3RvIiwiZ3RhZ19zZW5kdG8iLCJldmVudF9jYWxsYmFjayIsIndpbmRvdyIsImd0YWdfcmVwb3J0X2NvbnZlcnNpb24iLCJodG1sIiwiYWRkQ2xhc3MiLCJyZW1vdmVDbGFzcyIsImZhaWwiLCJqUXVlcnkiLCJkb2N1bWVudCIsInJlYWR5Il0sIm1hcHBpbmdzIjoiY0FBQSxTQUFZQSxHQWVYLFNBQVNDLElBQ3VELEVBQTFERCxFQUFHLDZDQUE4Q0UsUUFDckRGLEVBQUcsNkNBQThDRyxPQUFRLFNBQVVDLEdBQ2xFLElBQ0lDLEVBQVNMLEVBQUcsU0FBVU0sTUFDdEJDLEVBQXVCRixFQUFPRyxPQUM5QkMsRUFBaUJULEVBQUdNLE1BQU9JLFlBQy9CTCxFQUFPTSxLQUFNLFlBQVksR0FDekJOLEVBQU9HLEtBQU0sY0FDYkosRUFBTVEsaUJBRU5ILEdBQWtDLDhCQUNsQ1QsRUFBRWEsS0FBSyxDQUNOQyxJQUFLQyxPQUFPQyxRQUNaQyxLQUFNLE9BQ05DLFNBQVcsT0FDWEMsS0FBTVYsSUFFTlcsS0FBTSxTQUFVQyxHQUNoQixJQUFJQyxFQUFnQixHQUNoQkMsRUFBZ0IsT0FDcEIsSUFBSyxJQUFTRixFQUFTRyxRQUFVLENBQ2hDbkIsRUFBT0csS0FBTSxVQUNiLElBQUlpQixFQUFtQixTQUN2QixPQUFTSixFQUFTRixLQUFLTyxhQUN0QixJQUFLLFdBQ0pELEVBQW1CLFNBQ25CSCxFQUFVLG9GQUNWLE1BQ0QsSUFBSyxNQUNKRyxFQUFtQixTQUNuQkgsRUFBVSxrREFDVixNQUNELElBQUssVUFDSkcsRUFBbUIsU0FDbkJILEVBQVUsaUpBR1AsS0FBT0QsRUFBU0YsS0FBS1Esa0JBQ3pCTCxFQUFVRCxFQUFTRixLQUFLUSxpQkFHcEIsbUJBQXNCQyw4QkFDMUJBLDRCQUE2QixRQUFTLGFBQWNILEVBQWtCSSxTQUFTQyxVQXhEckYsU0FBaUNoQixHQU1oQ2lCLEtBQU0sUUFBUyxhQUFjLENBQzNCQyxRQUFXakIsT0FBT2tCLFlBQ2xCQyxlQVBhLGdCQUNSLElBQXdCcEIsSUFDM0JxQixPQUFPTixTQUFXZixNQXNEakJzQixDQUF3QlAsU0FBU0MsZ0JBR2xDekIsRUFBT00sS0FBTSxZQUFZLEdBQ3pCTixFQUFPRyxLQUFNRCxHQUNSLG1CQUFzQnFCLDZCQUMxQkEsNEJBQTZCLFFBQVMsYUFBYyxPQUFRQyxTQUFTQyxVQUVqRSxLQUFPVCxFQUFTRixLQUFLUSxrQkFDekJMLEVBQVVELEVBQVNGLEtBQUtRLGlCQUV6QkosRUFBZ0IsUUFFakJ2QixFQUFHLHdCQUF5QnFDLEtBQU1mLEdBQ2xDdEIsRUFBRyx3QkFBeUJzQyxTQUFVLGtCQUFvQmYsR0FBZ0JnQixZQUFhLHFDQUV2RkMsS0FBTSxTQUFVbkIsR0FDaEJyQixFQUFHLHdCQUF5QnFDLEtBQU0sa0RBQ2xDckMsRUFBRyx3QkFBeUJzQyxTQUFVLHdCQUF5QkMsWUFBYSxtQ0FDNUVsQyxFQUFPTSxLQUFNLFlBQVksR0FDekJOLEVBQU9HLEtBQU1ELEdBQ1IsbUJBQXNCcUIsNkJBQzFCQSw0QkFBNkIsUUFBUyxhQUFjLE9BQVFDLFNBQVNDLGNBTzFFVyxPQUFRQyxVQUFXQyxNQUFPLFNBQVUzQyxHQUNuQ0MsTUF6RkYsQ0E0Rkd3QyIsImZpbGUiOiJmcm9udC1lbmQubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKCBmdW5jdGlvbiggJCApIHtcblxuXHRmdW5jdGlvbiBndGFnX3JlcG9ydF9jb252ZXJzaW9uKCB1cmwgKSB7XG5cdFx0dmFyIGNhbGxiYWNrID0gZnVuY3Rpb24gKCkge1xuXHRcdCAgaWYgKCAndW5kZWZpbmVkJyAhPT0gdHlwZW9mKCB1cmwgKSApIHtcblx0XHQgICAgd2luZG93LmxvY2F0aW9uID0gdXJsO1xuXHRcdCAgfVxuXHRcdH07XG5cdFx0Z3RhZyggJ2V2ZW50JywgJ2NvbnZlcnNpb24nLCB7XG5cdFx0ICAnc2VuZF90byc6IHBhcmFtcy5ndGFnX3NlbmR0byxcblx0XHQgICdldmVudF9jYWxsYmFjayc6IGNhbGxiYWNrXG5cdFx0fSApO1xuXHRcdHJldHVybiBmYWxzZTtcblx0fVxuXG5cdGZ1bmN0aW9uIHNob3J0Y29kZUZvcm0oKSB7XG5cdFx0aWYgKCAkKCAnLm0tZm9ybS1taW5ucG9zdC1mb3JtLXByb2Nlc3Nvci1tYWlsY2hpbXAnICkubGVuZ3RoID4gMCApIHtcblx0XHRcdCQoICcubS1mb3JtLW1pbm5wb3N0LWZvcm0tcHJvY2Vzc29yLW1haWxjaGltcCcgKS5zdWJtaXQoIGZ1bmN0aW9uKCBldmVudCApIHtcblx0XHRcdFx0dmFyIHRoYXQgPSB0aGlzO1xuXHRcdFx0XHR2YXIgYnV0dG9uID0gJCggJ2J1dHRvbicsIHRoaXMgKTtcblx0XHRcdFx0dmFyIHByZXZpb3VzX2J1dHRvbl90ZXh0ID0gYnV0dG9uLnRleHQoKTtcblx0XHRcdFx0dmFyIGFqYXhfZm9ybV9kYXRhID0gJCggdGhpcyApLnNlcmlhbGl6ZSgpOyAvLyBzZXJpYWxpemUgdGhlIGZvcm0gZGF0YVxuXHRcdFx0XHRidXR0b24ucHJvcCggJ2Rpc2FibGVkJywgdHJ1ZSApO1xuXHRcdFx0XHRidXR0b24udGV4dCggJ1Byb2Nlc3NpbmcnICk7XG5cdFx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7IC8vIFByZXZlbnQgdGhlIGRlZmF1bHQgZm9ybSBzdWJtaXQuXHRcdFx0XHRcblx0XHRcdFx0Ly9hZGQgb3VyIG93biBhamF4IGNoZWNrIGFzIFgtUmVxdWVzdGVkLVdpdGggaXMgbm90IGFsd2F5cyByZWxpYWJsZVxuXHRcdFx0XHRhamF4X2Zvcm1fZGF0YSA9IGFqYXhfZm9ybV9kYXRhICsgJyZhamF4cmVxdWVzdD10cnVlJnN1YnNjcmliZSc7XG5cdFx0XHRcdCQuYWpheCh7XG5cdFx0XHRcdFx0dXJsOiBwYXJhbXMuYWpheHVybCwgLy8gZG9tYWluL3dwLWFkbWluL2FkbWluLWFqYXgucGhwXG5cdFx0XHRcdFx0dHlwZTogJ3Bvc3QnLFxuXHRcdFx0XHRcdGRhdGFUeXBlIDogJ2pzb24nLFxuXHRcdFx0XHRcdGRhdGE6IGFqYXhfZm9ybV9kYXRhXG5cdFx0XHRcdH0gKVxuXHRcdFx0XHQuZG9uZSggZnVuY3Rpb24oIHJlc3BvbnNlICkgeyAvLyByZXNwb25zZSBmcm9tIHRoZSBQSFAgYWN0aW9uXG5cdFx0XHRcdFx0dmFyIG1lc3NhZ2UgICAgICAgPSAnJztcblx0XHRcdFx0XHR2YXIgbWVzc2FnZV9jbGFzcyA9ICdpbmZvJztcblx0XHRcdFx0XHRpZiAoIHRydWUgPT09IHJlc3BvbnNlLnN1Y2Nlc3MgKSB7XG5cdFx0XHRcdFx0XHRidXR0b24udGV4dCggJ1RoYW5rcycgKTtcblx0XHRcdFx0XHRcdHZhciBhbmFseXRpY3NfYWN0aW9uID0gJ1NpZ251cCc7XG5cdFx0XHRcdFx0XHRzd2l0Y2ggKCByZXNwb25zZS5kYXRhLnVzZXJfc3RhdHVzICkge1xuXHRcdFx0XHRcdFx0XHRjYXNlICdleGlzdGluZyc6XG5cdFx0XHRcdFx0XHRcdFx0YW5hbHl0aWNzX2FjdGlvbiA9ICdVcGRhdGUnO1xuXHRcdFx0XHRcdFx0XHRcdG1lc3NhZ2UgPSAnVGhhbmtzIGZvciB1cGRhdGluZyB5b3VyIGVtYWlsIHByZWZlcmVuY2VzLiBUaGV5IHdpbGwgZ28gaW50byBlZmZlY3QgaW1tZWRpYXRlbHkuJztcblx0XHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdFx0Y2FzZSAnbmV3Jzpcblx0XHRcdFx0XHRcdFx0XHRhbmFseXRpY3NfYWN0aW9uID0gJ1NpZ251cCc7XG5cdFx0XHRcdFx0XHRcdFx0bWVzc2FnZSA9ICdXZSBoYXZlIGFkZGVkIHlvdSB0byB0aGUgTWlublBvc3QgbWFpbGluZyBsaXN0Lic7XG5cdFx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHRcdGNhc2UgJ3BlbmRpbmcnOlxuXHRcdFx0XHRcdFx0XHRcdGFuYWx5dGljc19hY3Rpb24gPSAnU2lnbnVwJztcblx0XHRcdFx0XHRcdFx0XHRtZXNzYWdlID0gJ1dlIGhhdmUgYWRkZWQgeW91IHRvIHRoZSBNaW5uUG9zdCBtYWlsaW5nIGxpc3QuIFlvdSB3aWxsIG5lZWQgdG8gY2xpY2sgdGhlIGNvbmZpcm1hdGlvbiBsaW5rIGluIHRoZSBlbWFpbCB3ZSBzZW50IHRvIGJlZ2luIHJlY2VpdmluZyBtZXNzYWdlcy4nO1xuXHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0aWYgKCAnJyAhPT0gcmVzcG9uc2UuZGF0YS5jb25maXJtX21lc3NhZ2UgKSB7XG5cdFx0XHRcdFx0XHRcdG1lc3NhZ2UgPSByZXNwb25zZS5kYXRhLmNvbmZpcm1fbWVzc2FnZTtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0aWYgKCAnZnVuY3Rpb24nID09PSB0eXBlb2Ygd3BfYW5hbHl0aWNzX3RyYWNraW5nX2V2ZW50ICkge1xuXHRcdFx0XHRcdFx0XHR3cF9hbmFseXRpY3NfdHJhY2tpbmdfZXZlbnQoICdldmVudCcsICdOZXdzbGV0dGVyJywgYW5hbHl0aWNzX2FjdGlvbiwgbG9jYXRpb24ucGF0aG5hbWUgKTtcblx0XHRcdFx0XHRcdFx0Z3RhZ19yZXBvcnRfY29udmVyc2lvbiggbG9jYXRpb24ucGF0aG5hbWUgKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0YnV0dG9uLnByb3AoICdkaXNhYmxlZCcsIGZhbHNlICk7XG5cdFx0XHRcdFx0XHRidXR0b24udGV4dCggcHJldmlvdXNfYnV0dG9uX3RleHQgKTtcblx0XHRcdFx0XHRcdGlmICggJ2Z1bmN0aW9uJyA9PT0gdHlwZW9mIHdwX2FuYWx5dGljc190cmFja2luZ19ldmVudCApIHtcblx0XHRcdFx0XHRcdFx0d3BfYW5hbHl0aWNzX3RyYWNraW5nX2V2ZW50KCAnZXZlbnQnLCAnTmV3c2xldHRlcicsICdGYWlsJywgbG9jYXRpb24ucGF0aG5hbWUgKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGlmICggJycgIT09IHJlc3BvbnNlLmRhdGEuY29uZmlybV9tZXNzYWdlICkge1xuXHRcdFx0XHRcdFx0XHRtZXNzYWdlID0gcmVzcG9uc2UuZGF0YS5jb25maXJtX21lc3NhZ2U7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRtZXNzYWdlX2NsYXNzID0gJ2Vycm9yJztcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0JCggJy5tLWZvcm0tbWVzc2FnZS1hamF4JyApLmh0bWwoIG1lc3NhZ2UgKTtcblx0XHRcdFx0XHQkKCAnLm0tZm9ybS1tZXNzYWdlLWFqYXgnICkuYWRkQ2xhc3MoICdtLWZvcm0tbWVzc2FnZS0nICsgbWVzc2FnZV9jbGFzcyApLnJlbW92ZUNsYXNzKCAnbS1mb3JtLW1lc3NhZ2UtYWpheC1wbGFjZWhvbGRlcicgKTtcblx0XHRcdFx0fSApXG5cdFx0XHRcdC5mYWlsKCBmdW5jdGlvbiggcmVzcG9uc2UgKSB7XG5cdFx0XHRcdFx0JCggJy5tLWZvcm0tbWVzc2FnZS1hamF4JyApLmh0bWwoICc8cD5BbiBlcnJvciBoYXMgb2NjdXJlZC4gUGxlYXNlIHRyeSBhZ2Fpbi48L3A+JyApO1xuXHRcdFx0XHRcdCQoICcubS1mb3JtLW1lc3NhZ2UtYWpheCcgKS5hZGRDbGFzcyggJ20tZm9ybS1tZXNzYWdlLWVycm9yJyApLnJlbW92ZUNsYXNzKCAnbS1mb3JtLW1lc3NhZ2UtYWpheC1wbGFjZWhvbGRlcicgKTtcblx0XHRcdFx0XHRidXR0b24ucHJvcCggJ2Rpc2FibGVkJywgZmFsc2UgKTtcblx0XHRcdFx0XHRidXR0b24udGV4dCggcHJldmlvdXNfYnV0dG9uX3RleHQgKTtcblx0XHRcdFx0XHRpZiAoICdmdW5jdGlvbicgPT09IHR5cGVvZiB3cF9hbmFseXRpY3NfdHJhY2tpbmdfZXZlbnQgKSB7XG5cdFx0XHRcdFx0XHR3cF9hbmFseXRpY3NfdHJhY2tpbmdfZXZlbnQoICdldmVudCcsICdOZXdzbGV0dGVyJywgJ0ZhaWwnLCBsb2NhdGlvbi5wYXRobmFtZSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSApO1xuXHRcdFx0fSk7XG5cdFx0fVxuXHR9XG5cblx0alF1ZXJ5KCBkb2N1bWVudCApLnJlYWR5KCBmdW5jdGlvbiggJCApIHtcblx0XHRzaG9ydGNvZGVGb3JtKCk7XG5cdH0pO1xuXG59KShqUXVlcnkpOyJdfQ==
