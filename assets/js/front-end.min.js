"use strict";!function(s){function t(){0<s(".m-form-newsletter-shortcode").length&&(s(".m-form-newsletter-shortcode fieldset").before('<div class="m-hold-message"></div>'),s(".m-form-newsletter-shortcode form").submit(function(e){var n=this;e.preventDefault();var i=s("button",this);i.prop("disabled",!0),i.text("Processing");var t=s(this).serialize();t+="&ajaxrequest=true&subscribe",s.ajax({url:params.ajaxurl,type:"post",dataType:"json",data:t}).done(function(e){var t="";if(!0===e.success){s("fieldset",n).hide(),i.text("Thanks");var a="Signup";switch(e.data.user_status){case"existing":a="Update",t="Thanks for updating your email preferences. They will go into effect immediately.";break;case"new":a="Signup",t="We have added you to the MinnPost mailing list.";break;case"pending":a="Signup",t="We have added you to the MinnPost mailing list. You will need to click the confirmation link in the email we sent to begin receiving messages."}""!==e.data.confirm_message&&(t=e.data.confirm_message),"function"==typeof mp_analytics_tracking_event&&(mp_analytics_tracking_event("event","Newsletter",a,location.pathname),function(e){gtag("event","conversion",{send_to:"AW-976620175/jqCyCL7atXkQj5XY0QM",event_callback:function(){void 0!==e&&(window.location=e)}})}(location.pathname))}else i.prop("disabled",!1),i.text("Subscribe"),"function"==typeof mp_analytics_tracking_event&&mp_analytics_tracking_event("event","Newsletter","Fail",location.pathname);s(".m-hold-message").html('<div class="m-form-message m-form-message-info">'+t+"</div>")}).fail(function(e){s(".m-hold-message").html('<div class="m-form-message m-form-message-info">An error has occured. Please try again.</div>'),i.prop("disabled",!1),i.text("Subscribe"),"function"==typeof mp_analytics_tracking_event&&mp_analytics_tracking_event("event","Newsletter","Fail",location.pathname)}).always(function(){e.target.reset()})}))}jQuery(document).ready(function(e){t()})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNob3J0Y29kZS5qcyJdLCJuYW1lcyI6WyIkIiwic2hvcnRjb2RlRm9ybSIsImxlbmd0aCIsImJlZm9yZSIsInN1Ym1pdCIsImV2ZW50IiwidGhhdCIsInRoaXMiLCJwcmV2ZW50RGVmYXVsdCIsImJ1dHRvbiIsInByb3AiLCJ0ZXh0IiwiYWpheF9mb3JtX2RhdGEiLCJzZXJpYWxpemUiLCJhamF4IiwidXJsIiwicGFyYW1zIiwiYWpheHVybCIsInR5cGUiLCJkYXRhVHlwZSIsImRhdGEiLCJkb25lIiwicmVzcG9uc2UiLCJtZXNzYWdlIiwic3VjY2VzcyIsImhpZGUiLCJhbmFseXRpY3NfYWN0aW9uIiwidXNlcl9zdGF0dXMiLCJjb25maXJtX21lc3NhZ2UiLCJtcF9hbmFseXRpY3NfdHJhY2tpbmdfZXZlbnQiLCJsb2NhdGlvbiIsInBhdGhuYW1lIiwiZ3RhZyIsInNlbmRfdG8iLCJldmVudF9jYWxsYmFjayIsIndpbmRvdyIsImd0YWdfcmVwb3J0X2NvbnZlcnNpb24iLCJodG1sIiwiZmFpbCIsImFsd2F5cyIsInRhcmdldCIsInJlc2V0IiwialF1ZXJ5IiwiZG9jdW1lbnQiLCJyZWFkeSJdLCJtYXBwaW5ncyI6ImNBQUEsU0FBWUEsR0FlWCxTQUFTQyxJQUN3QyxFQUEzQ0QsRUFBRSxnQ0FBZ0NFLFNBQ3RDRixFQUFFLHlDQUF5Q0csT0FBTyxzQ0FDbERILEVBQUUscUNBQXFDSSxPQUFPLFNBQVNDLEdBQ3RELElBQUlDLEVBQU9DLEtBQ1hGLEVBQU1HLGlCQUNOLElBQUlDLEVBQVNULEVBQUUsU0FBVU8sTUFDekJFLEVBQU9DLEtBQUssWUFBWSxHQUN4QkQsRUFBT0UsS0FBSyxjQUVaLElBQUlDLEVBQWlCWixFQUFFTyxNQUFNTSxZQUU3QkQsR0FBa0MsOEJBQ2xDWixFQUFFYyxLQUFLLENBQ05DLElBQUtDLE9BQU9DLFFBQ1pDLEtBQU0sT0FDTkMsU0FBVyxPQUNYQyxLQUFNUixJQUVOUyxLQUFLLFNBQVNDLEdBQ2QsSUFBSUMsRUFBVSxHQUNkLElBQTBCLElBQXJCRCxFQUFTRSxRQUFtQixDQUNoQ3hCLEVBQUUsV0FBWU0sR0FBTW1CLE9BQ3BCaEIsRUFBT0UsS0FBSyxVQUNaLElBQUllLEVBQW1CLFNBQ3ZCLE9BQVFKLEVBQVNGLEtBQUtPLGFBQ3JCLElBQUssV0FDSkQsRUFBbUIsU0FDbkJILEVBQVUsb0ZBQ1YsTUFDRCxJQUFLLE1BQ0pHLEVBQW1CLFNBQ25CSCxFQUFVLGtEQUNWLE1BQ0QsSUFBSyxVQUNKRyxFQUFtQixTQUNuQkgsRUFBVSxpSkFHMkIsS0FBbENELEVBQVNGLEtBQUtRLGtCQUNsQkwsRUFBVUQsRUFBU0YsS0FBS1EsaUJBRXBCLG1CQUFzQkMsOEJBQzFCQSw0QkFBNkIsUUFBUyxhQUFjSCxFQUFrQkksU0FBU0MsVUF4RHJGLFNBQWdDaEIsR0FNL0JpQixLQUFLLFFBQVMsYUFBYyxDQUMxQkMsUUFBVyxtQ0FDWEMsZUFQYSxnQkFDTSxJQUFSbkIsSUFDVG9CLE9BQU9MLFNBQVdmLE1Bc0RqQnFCLENBQXdCTixTQUFTQyxnQkFHbEN0QixFQUFPQyxLQUFLLFlBQVksR0FDeEJELEVBQU9FLEtBQUssYUFDUCxtQkFBc0JrQiw2QkFDMUJBLDRCQUE2QixRQUFTLGFBQWMsT0FBUUMsU0FBU0MsVUFHdkUvQixFQUFFLG1CQUFtQnFDLEtBQUssbURBQXFEZCxFQUFVLFlBRXpGZSxLQUFLLFNBQVNoQixHQUNkdEIsRUFBRSxtQkFBbUJxQyxLQUFLLGlHQUMxQjVCLEVBQU9DLEtBQUssWUFBWSxHQUN4QkQsRUFBT0UsS0FBSyxhQUNQLG1CQUFzQmtCLDZCQUMxQkEsNEJBQTZCLFFBQVMsYUFBYyxPQUFRQyxTQUFTQyxZQUd0RVEsT0FBTyxXQUNQbEMsRUFBTW1DLE9BQU9DLGFBTWpCQyxPQUFRQyxVQUFXQyxNQUFPLFNBQVU1QyxHQUNuQ0MsTUF0RkYsQ0F5Rkd5QyIsImZpbGUiOiJmcm9udC1lbmQubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKCBmdW5jdGlvbiggJCApIHtcblxuXHRmdW5jdGlvbiBndGFnX3JlcG9ydF9jb252ZXJzaW9uKHVybCkge1xuXHRcdHZhciBjYWxsYmFjayA9IGZ1bmN0aW9uICgpIHtcblx0XHQgIGlmICh0eXBlb2YodXJsKSAhPSAndW5kZWZpbmVkJykge1xuXHRcdCAgICB3aW5kb3cubG9jYXRpb24gPSB1cmw7XG5cdFx0ICB9XG5cdFx0fTtcblx0XHRndGFnKCdldmVudCcsICdjb252ZXJzaW9uJywge1xuXHRcdCAgJ3NlbmRfdG8nOiAnQVctOTc2NjIwMTc1L2pxQ3lDTDdhdFhrUWo1WFkwUU0nLCAvLyBwdXQgdGhpcyBpbiB0aGUgYWRtaW4gc2V0dGluZ3M/XG5cdFx0ICAnZXZlbnRfY2FsbGJhY2snOiBjYWxsYmFja1xuXHRcdH0pO1xuXHRcdHJldHVybiBmYWxzZTtcblx0fVxuXG5cdGZ1bmN0aW9uIHNob3J0Y29kZUZvcm0oKSB7XG5cdFx0aWYgKCAkKCcubS1mb3JtLW5ld3NsZXR0ZXItc2hvcnRjb2RlJykubGVuZ3RoID4gMCApIHtcblx0XHRcdCQoJy5tLWZvcm0tbmV3c2xldHRlci1zaG9ydGNvZGUgZmllbGRzZXQnKS5iZWZvcmUoJzxkaXYgY2xhc3M9XCJtLWhvbGQtbWVzc2FnZVwiPjwvZGl2PicpO1xuXHRcdFx0JCgnLm0tZm9ybS1uZXdzbGV0dGVyLXNob3J0Y29kZSBmb3JtJykuc3VibWl0KGZ1bmN0aW9uKGV2ZW50KSB7XG5cdFx0XHRcdHZhciB0aGF0ID0gdGhpcztcblx0XHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTsgLy8gUHJldmVudCB0aGUgZGVmYXVsdCBmb3JtIHN1Ym1pdC5cblx0XHRcdFx0dmFyIGJ1dHRvbiA9ICQoJ2J1dHRvbicsIHRoaXMpO1xuXHRcdFx0XHRidXR0b24ucHJvcCgnZGlzYWJsZWQnLCB0cnVlKTtcblx0XHRcdFx0YnV0dG9uLnRleHQoJ1Byb2Nlc3NpbmcnKTtcblx0XHRcdFx0Ly8gc2VyaWFsaXplIHRoZSBmb3JtIGRhdGFcblx0XHRcdFx0dmFyIGFqYXhfZm9ybV9kYXRhID0gJCh0aGlzKS5zZXJpYWxpemUoKTtcblx0XHRcdFx0Ly9hZGQgb3VyIG93biBhamF4IGNoZWNrIGFzIFgtUmVxdWVzdGVkLVdpdGggaXMgbm90IGFsd2F5cyByZWxpYWJsZVxuXHRcdFx0XHRhamF4X2Zvcm1fZGF0YSA9IGFqYXhfZm9ybV9kYXRhICsgJyZhamF4cmVxdWVzdD10cnVlJnN1YnNjcmliZSc7XG5cdFx0XHRcdCQuYWpheCh7XG5cdFx0XHRcdFx0dXJsOiBwYXJhbXMuYWpheHVybCwgLy8gZG9tYWluL3dwLWFkbWluL2FkbWluLWFqYXgucGhwXG5cdFx0XHRcdFx0dHlwZTogJ3Bvc3QnLFxuXHRcdFx0XHRcdGRhdGFUeXBlIDogJ2pzb24nLFxuXHRcdFx0XHRcdGRhdGE6IGFqYXhfZm9ybV9kYXRhXG5cdFx0XHRcdH0pXG5cdFx0XHRcdC5kb25lKGZ1bmN0aW9uKHJlc3BvbnNlKSB7IC8vIHJlc3BvbnNlIGZyb20gdGhlIFBIUCBhY3Rpb25cblx0XHRcdFx0XHR2YXIgbWVzc2FnZSA9ICcnO1xuXHRcdFx0XHRcdGlmICggcmVzcG9uc2Uuc3VjY2VzcyA9PT0gdHJ1ZSApIHtcblx0XHRcdFx0XHRcdCQoJ2ZpZWxkc2V0JywgdGhhdCkuaGlkZSgpO1xuXHRcdFx0XHRcdFx0YnV0dG9uLnRleHQoJ1RoYW5rcycpO1xuXHRcdFx0XHRcdFx0dmFyIGFuYWx5dGljc19hY3Rpb24gPSAnU2lnbnVwJztcblx0XHRcdFx0XHRcdHN3aXRjaCAocmVzcG9uc2UuZGF0YS51c2VyX3N0YXR1cykge1xuXHRcdFx0XHRcdFx0XHRjYXNlICdleGlzdGluZyc6XG5cdFx0XHRcdFx0XHRcdFx0YW5hbHl0aWNzX2FjdGlvbiA9ICdVcGRhdGUnO1xuXHRcdFx0XHRcdFx0XHRcdG1lc3NhZ2UgPSAnVGhhbmtzIGZvciB1cGRhdGluZyB5b3VyIGVtYWlsIHByZWZlcmVuY2VzLiBUaGV5IHdpbGwgZ28gaW50byBlZmZlY3QgaW1tZWRpYXRlbHkuJztcblx0XHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdFx0Y2FzZSAnbmV3Jzpcblx0XHRcdFx0XHRcdFx0XHRhbmFseXRpY3NfYWN0aW9uID0gJ1NpZ251cCc7XG5cdFx0XHRcdFx0XHRcdFx0bWVzc2FnZSA9ICdXZSBoYXZlIGFkZGVkIHlvdSB0byB0aGUgTWlublBvc3QgbWFpbGluZyBsaXN0Lic7XG5cdFx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHRcdGNhc2UgJ3BlbmRpbmcnOlxuXHRcdFx0XHRcdFx0XHRcdGFuYWx5dGljc19hY3Rpb24gPSAnU2lnbnVwJztcblx0XHRcdFx0XHRcdFx0XHRtZXNzYWdlID0gJ1dlIGhhdmUgYWRkZWQgeW91IHRvIHRoZSBNaW5uUG9zdCBtYWlsaW5nIGxpc3QuIFlvdSB3aWxsIG5lZWQgdG8gY2xpY2sgdGhlIGNvbmZpcm1hdGlvbiBsaW5rIGluIHRoZSBlbWFpbCB3ZSBzZW50IHRvIGJlZ2luIHJlY2VpdmluZyBtZXNzYWdlcy4nO1xuXHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0aWYgKCByZXNwb25zZS5kYXRhLmNvbmZpcm1fbWVzc2FnZSAhPT0gJycgKSB7XG5cdFx0XHRcdFx0XHRcdG1lc3NhZ2UgPSByZXNwb25zZS5kYXRhLmNvbmZpcm1fbWVzc2FnZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGlmICggJ2Z1bmN0aW9uJyA9PT0gdHlwZW9mIG1wX2FuYWx5dGljc190cmFja2luZ19ldmVudCApIHtcblx0XHRcdFx0XHRcdFx0bXBfYW5hbHl0aWNzX3RyYWNraW5nX2V2ZW50KCAnZXZlbnQnLCAnTmV3c2xldHRlcicsIGFuYWx5dGljc19hY3Rpb24sIGxvY2F0aW9uLnBhdGhuYW1lICk7XG5cdFx0XHRcdFx0XHRcdGd0YWdfcmVwb3J0X2NvbnZlcnNpb24oIGxvY2F0aW9uLnBhdGhuYW1lICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdGJ1dHRvbi5wcm9wKCdkaXNhYmxlZCcsIGZhbHNlKTtcblx0XHRcdFx0XHRcdGJ1dHRvbi50ZXh0KCdTdWJzY3JpYmUnKTtcblx0XHRcdFx0XHRcdGlmICggJ2Z1bmN0aW9uJyA9PT0gdHlwZW9mIG1wX2FuYWx5dGljc190cmFja2luZ19ldmVudCApIHtcblx0XHRcdFx0XHRcdFx0bXBfYW5hbHl0aWNzX3RyYWNraW5nX2V2ZW50KCAnZXZlbnQnLCAnTmV3c2xldHRlcicsICdGYWlsJywgbG9jYXRpb24ucGF0aG5hbWUgKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0JCgnLm0taG9sZC1tZXNzYWdlJykuaHRtbCgnPGRpdiBjbGFzcz1cIm0tZm9ybS1tZXNzYWdlIG0tZm9ybS1tZXNzYWdlLWluZm9cIj4nICsgbWVzc2FnZSArICc8L2Rpdj4nKTtcblx0XHRcdFx0fSlcblx0XHRcdFx0LmZhaWwoZnVuY3Rpb24ocmVzcG9uc2UpIHtcblx0XHRcdFx0XHQkKCcubS1ob2xkLW1lc3NhZ2UnKS5odG1sKCc8ZGl2IGNsYXNzPVwibS1mb3JtLW1lc3NhZ2UgbS1mb3JtLW1lc3NhZ2UtaW5mb1wiPkFuIGVycm9yIGhhcyBvY2N1cmVkLiBQbGVhc2UgdHJ5IGFnYWluLjwvZGl2PicpO1xuXHRcdFx0XHRcdGJ1dHRvbi5wcm9wKCdkaXNhYmxlZCcsIGZhbHNlKTtcblx0XHRcdFx0XHRidXR0b24udGV4dCgnU3Vic2NyaWJlJyk7XG5cdFx0XHRcdFx0aWYgKCAnZnVuY3Rpb24nID09PSB0eXBlb2YgbXBfYW5hbHl0aWNzX3RyYWNraW5nX2V2ZW50ICkge1xuXHRcdFx0XHRcdFx0bXBfYW5hbHl0aWNzX3RyYWNraW5nX2V2ZW50KCAnZXZlbnQnLCAnTmV3c2xldHRlcicsICdGYWlsJywgbG9jYXRpb24ucGF0aG5hbWUgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pXG5cdFx0XHRcdC5hbHdheXMoZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0ZXZlbnQudGFyZ2V0LnJlc2V0KCk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0fSk7XG5cdFx0fVxuXHR9XG5cblx0alF1ZXJ5KCBkb2N1bWVudCApLnJlYWR5KCBmdW5jdGlvbiggJCApIHtcblx0XHRzaG9ydGNvZGVGb3JtKCk7XG5cdH0pO1xuXG59KShqUXVlcnkpOyJdfQ==
